---
title: "Draft Quarto document"
author: "Your Name"
format: html
---

## Header 1

```{r setup}
#| include: false
library(tidyverse)
library(here)
library(snakecase)
library(fs)
source(here::here("R/functions.r"))
```

```{r}
# Code chunk
```

## Import CGM data
```{r}
cgm_101 <- here::here("data-raw/dime/cgm/101.csv") |>
  read_csv(
    show_col_types = FALSE,
    name_repair = snakecase::to_snake_case,
    n_max = 100
  )
```


## Import sleep data
```{r}
sleep_101 <- here::here("data-raw/dime/sleep/101.csv") |>
  read_csv(
    show_col_types = FALSE,
    name_repair = snakecase::to_snake_case,
    n_max = 100
  )
sleep_101
```

```{r}
sleep_101 |>
  ggplot(aes(x = date, y = sleep_type)) +
  geom_point()

#
sleep_101 |>
  # filter(date < "2021-05-24 0:00:00 UTC") # lubridate::?
  # filter(date >= as.Date("2021-05-24"), date <= as.Date("2021-05-25")) |>
  ggplot(aes(x = date, y = sleep_type)) +
  geom_step(aes(group = 1)) +
  # geom_line(aes(x = date, y = sleep_type)) + # colour = sleep_type
  labs(title = "Subject 1", x = "Time (POSIXct)", y = "Sleep State") #+
# theme_clean()
```

## Making a function that adds numbers

```{r}
#' Add two nubers together
#'
#' @param num1 A number
#' @param num2 A number
#'
#' @returns Returns the sum of the numbers
#'
#' @examples add_numbers(100, 1)
add_numbers <- function(num1, num2) {
  added <- num1 + num2
  return(added)
}

add_numbers(100, 1)
```



## Import CGM data with a function
```{r}
#' Title
#'
#' @param file_path Path to the file
#'
#' @returns A dataframe
#'
#' @examples
#' here::here("data-raw/dime/cgm/101.csv") |>
#'   import_cgm()
#'
import_cgm <- function(file_path) {
  cgm <- file_path |>
    readr::read_csv(
      show_col_types = FALSE,
      name_repair = snakecase::to_snake_case,
      n_max = 100
    )
  return(cgm)
}

# import_cgm(here::here("data-raw/dime/cgm/101.csv"))
here::here("data-raw/dime/cgm/101.csv") |>
  import_cgm()

here::here("data-raw/dime/cgm/102.csv") |>
  import_cgm()
```


## Import sleep data with a function
```{r}
#' Title
#'
#' @param file_path Path to the file
#'
#' @returns A data frame
#'
#' @examples
#' here::here("data-raw/dime/sleep/101.csv") |>
#'   import_cgm()
#'
import_sleep <- function(file_path) {
  sleep <- file_path |>
    # browser()
    readr::read_csv(
      show_col_types = FALSE,
      name_repair = snakecase::to_snake_case,
      n_max = 100
    )
  return(sleep)
}

here::here("data-raw/dime/sleep/101.csv") |>
  import_sleep()
```

## Making functions robust
```{r}
# add pak::func and add usethis::use_package("snakecase")
```

## Import DIME data function
```{r}
here::here("data-raw/dime/sleep/101.csv") |>
  import_dime()
```



## S3 classes and S3 methods
```{r}
num <- 1000000000
print(num)

class(num) <- c("POSIXct", "POSIXt")
print(num)

class(num) <- c("daniel_mazhariJensen")

print.daniel_mazhariJensen <- function(x) {
  cat("This is Daniel's work:", x, "\n")
}

print(num)

getS3method("print", "daniel_mazhariJensen")
getS3method("print", "numeric_version")
getS3method("print", "POSIXct")
getS3method("print", "factor")
getS3method("print", "data.frame")
```

# Day 2

## functionals using {purrr}
```{r}
# map() outputs a list.
# map_chr() outputs a character vector.
# map_int() outputs an integer vector.
# map_dbl() outputs a numeric value, called a “double” in programming.

map(1:5, ~ paste(.x, "seconds have passed"))
map(1:5, \(number) paste(number, "seconds have passed"))
map(1:5, function(number) paste(number, "seconds have passed"))
```

## Using map

```{r}
cgm_files <- here::here("data-raw/dime/cgm/") |>
  fs::dir_ls(glob = "*.csv")

cgm_data <- cgm_files |>
  map(import_dime) |>
  purrr::list_rbind(names_to = "file_path_id")

dim(cgm_data)

cgm_data |>
  dplyr::rename(file_path_id, )
```


## Exercise: Convert map to function and use on sleep.
```{r}
import_csv_files("data-raw/dime/sleep/")
```
